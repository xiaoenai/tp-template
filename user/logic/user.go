// Code generated by 'micro gen' command.
// The temporary code used to ensure successful compilation!
// When the project is completed, it should be removed!

package logic

import (
	tp "github.com/henrylee2cn/teleport"
	micro "github.com/xiaoenai/tp-micro"
	accountArgs "github.com/xiaoenai/tp-template/account/args"
	accountSdk "github.com/xiaoenai/tp-template/account/sdk"

	"github.com/xiaoenai/tp-template/user/args"
	// "github.com/xiaoenai/tp-template/user/logic/model"
	// "github.com/xiaoenai/tp-template/user/rerrs"
)

// Add handler
func V1_User_Add(ctx tp.PullCtx, arg *args.AddUserArgsV1) (*args.AddUserResultV1, *tp.Rerror) {
	_, rerr := accountSdk.V1_User_Set(&accountArgs.SetUserArgsV1{
		Name: arg.Name,
	})
	return new(args.AddUserResultV1), rerr
}

// 获取用户
func V1_User_GetById(ctx tp.PullCtx, arg *args.GetUserByIdArgsV1) (*args.GetUserByIdResultV1, *tp.Rerror) {
	user, rerr := accountSdk.V1_User_GetById(&accountArgs.GetUserByIdArgsV1{
		Id: arg.Id,
	})
	if rerr != nil {
		return nil, rerr
	}
	if user == nil {
		return nil, micro.RerrNotFound
	}
	return &args.GetUserByIdResultV1{
		Name:        user.Name,
		AccessToken: user.AccessToken,
	}, rerr
}

// Get handler
func V1_User_Get(ctx tp.PullCtx, arg *args.GetUserArgsV1) (*args.GetUserResultV1, *tp.Rerror) {
	_user, ok := ctx.Swap().Load(accountSdk.CTX_DATAKEY_USER)
	if !ok {
		return nil, micro.RerrNotFound.Copy().SetReason("user get err")
	}
	user := _user.(*accountArgs.User)

	return &args.GetUserResultV1{
		Name: user.Name,
	}, nil
}
